{{define "content"}}
    <div class="max-w-md mx-auto my-8">
        <h1 class="text-red-800 text-3xl font-bold mb-2">Register account</h1>

        {{if .Error}}
            <div class="bg-red-500 text-white p-2 rounded mb-2">{{.Error}}</div>
        {{end}}

        <form class="bg-white rounded-lg shadow-md p-8" action="/signup" method="post"
              x-data="{
                    selected: 1,
                    total: 2,
                    previous() {
                        this.selected = Math.max(this.selected - 1, 1)
                    },
                    next() {
                        this.selected = Math.min(this.selected + 1, this.total)
                    },
                    username: '',
                    email: '',
                    error: {
                        username: null,
                        email: null
                    },
                    success: {
                        username: null,
                        email: null
                    },
                    checkUsername(value, type) {
                        if (type === 'email') {
                            if (!value.match(/^[^\s@]+@[^\s@]+\.[^\s@]+$/)) {
                                this.error.email = 'Email is not valid'
                                this.success.email = false
                                return
                            }
                        }
                        fetch('http://localhost:8097/checkEmailAndUsername?username=' + (type === 'username' ? value : '') + '&email=' + (type === 'email' ? value : ''))
                            .then((response) => {
                                if (!response.ok) {
                                    throw new Error('Erreur lors de la requÃªte.');
                                }
                                return response.json()
                            })
                            .then((json) => {
                            console.log('STRUCT:',json)
                                if (json.username?.exists) {
                                    this.error.username = json.username.message
                                    this.success.username = false
                                }else {
                                    this.success.username = json.username.message
                                    this.error.username = false
                                }

                                if (json.email?.exists) {
                                    this.error.email = json.email.message
                                    this.success.email = false
                                }else {
                                    this.success.email = json.email.message
                                    this.error.email = false
                                }
                                console.log('ERROR:', this.error, 'SUCCESS:', this.success)
                            })
                            .catch((error) => {
                                console.log('Error during checking username:',error)
                            });
                    }
              }"
        >
            <div x-show="selected === 1">
                <div class="mb-2">
                    <label class="flex justify-between text-gray-700 text-sm font-bold mb-2" for="username">
                        <span>Username</span>
                        <span x-text="error.username || success.username"
                              :class="{'text-red-500 text-xs': error.username, 'text-emerald-500 text-xs': success.username}"></span>
                    </label>
                    <input x-model="username" @change="checkUsername($event.target.value,'username')"
                           :class="{ 'basic-input-error': error.username, 'basic-input-success': success.username, 'basic-input': !error.username && !success.username }"
                           type="text" name="username" id="username"
                           placeholder="Username"
                           required>
                </div>
                <div class="mb-2">
                    <label class="block text-gray-700 text-sm font-bold mb-2" for="password">Password</label>
                    <input class="basic-input" type="password" name="password" id="password" placeholder="Password"
                           required>
                </div>
                <div class="mb-2">
                    <label class="block text-gray-700 text-sm font-bold mb-2" for="password2">Confirm Password</label>
                    <input class="basic-input" type="password" name="password2" id="password2"
                           placeholder="Confirm Password" required>
                </div>
            </div>

            <div x-show="selected === 2">
                <div class="mb-2">
                    <label class="block text-gray-700 text-sm font-bold mb-2" for="name">Name</label>
                    <input class="basic-input" type="text" name="name" id="name" placeholder="Name" required>
                </div>
                <div class="mb-2">
                    <label class="block text-gray-700 text-sm font-bold mb-2" for="firstname">Firstname</label>
                    <input class="basic-input" type="text" name="firstname" id="firstname" placeholder="Firstname"
                           required>
                </div>
                <div class="mb-2">
                    <label class="flex justify-between text-gray-700 text-sm font-bold mb-2" for="mail">
                        <span>
                            Email
                        </span>
                        <span
                            x-text="error.email || success.email"
                            :class="{'text-red-500 text-xs': error.email, 'text-emerald-500 text-xs': success.email}"
                        ></span>
                    </label>
                    <input x-model="email" @change="checkUsername($event.target.value,'email')"
                           :class="{ 'basic-input-error': error.email, 'basic-input-success': success.email, 'basic-input': !error.email && !success.email }"
                           type="email" name="mail" id="mail" placeholder="Email"
                           pattern="[a-z0-9._%+\-]+@[a-z0-9.\-]+\.[a-z]{2,}$" required>
                </div>
                <div class="mb-2">
                    <label class="block text-gray-700 text-sm font-bold mb-2" for="phone">Phone</label>
                    <input class="basic-input" type="text" name="phone" id="phone" placeholder="Phone" required>
                </div>
                <div class="mb-2">
                    <label class="block text-gray-700 text-sm font-bold mb-2" for="birthday">Birthday</label>
                    <input class="basic-input" type="date" name="birthday" id="birthday" placeholder="Birthday"
                    >
                </div>
                <div class="mt-4">
                    <button class="bg-cyan-500 text-white font-bold py-2 px-4 rounded hover:bg-cyan-700" type="submit">
                        Sign Up
                    </button>
                </div>
            </div>
            <div class="mb-2 flex flex-row justify-items-end">
                <a class="text-cyan-500 hover:text-cyan-700" href="/login">Already have an account ?
                    Sign in!</a>
            </div>
            <div class="relative">
                <button @click="previous" x-show="selected > 1" type="button"
                        class="absolute start-0 font-semibold text-red-700"><- Previous
                </button>
                <button @click="next" x-show="selected < 2" type="button"
                        class="absolute end-0 font-semibold text-red-700">Next ->
                </button>
            </div>
        </form>

    </div>

{{end}}